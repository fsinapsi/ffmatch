;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet cfg-set (key val)
        (set key (sqlite3-escape-strings key))
        (if (= val undef)
        then    (sqlite3-exec _db undef
                        "DELETE FROM config WHERE key='" key "'" )
        else    (if (stringp val)
                then    (set val (sqlite3-escape-strings val)) )
                (alt    (sqlite3-exec _db undef
                                "INSERT INTO config VALUES('" key "','" val "')" )
                        (sqlite3-exec _db undef
                                "UPDATE config SET value='" val
                                "' WHERE key='" key "'" ))))

(defnet cfg-clr (key)
        (cfg-set key undef) )

(defnet cfg-inc (key val)
        (deflocal v)

        (set v (cfg-get-num key))
        (cfg-set key (+ (if (= v undef) 0 v) val)) )

(defun cfg-exists (key)
        (= <(sqlite3-exec _db
                "SELECT count(*) FROM config WHERE key='"
                (sqlite3-escape-strings key) "'" ) 0 0>
           "1" ))

(defun cfg-get (key)
        <(sqlite3-exec _db
                "SELECT value FROM config WHERE key='"
                (sqlite3-escape-strings key) "'" ) 0 0> )

(defun cfg-get-or-default (key default-info) net cfg-get-or-default)
(defnet cfg-get-or-default (key default-info @val)
        (set @val (cfg-get key))
        (if (= @val undef)
        then    (set @val <default-info key>) ))

(defun cfg-get-num (key)
        (cfg-validate-num (cfg-get key)) )

(defun cfg-get-or-default-num (key default-info)
        (cfg-validate-num (cfg-get-or-default key default-info)) )

(defun cfg-validate-num (val)
        (if (complexp val) val (str->num val)) )

(defun cfg-get-lang() net cfg-get-lang)
(defnet cfg-get-lang (@lang)
        (set @lang (cfg-get "lang"))
        (set @lang (if (= @lang undef) (lang) (cfg-validate-num @lang))) )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet cfg (info)
        (deflocal cfg-info win vb w)

        (set cfg-info (assoc))
        (set <info "cfg-info"> cfg-info)

        (set win (gtk-window-new))
        (set <cfg-info "w-win"> win)
        (gtk-window-set-transient-for win <info "w-win">)
        (gtk-window-set-modal win true)
        (gtk-window-set-resizable win false)
        (gtk-window-set-title win $"Preferences")
        (gtk-container-set-border-width win 10)
        (gtk-signal-connect win "destroy" (netptr cfg-destroy) info)

        (set vb (gtk-vbox-new false 10))
        (gtk-container-add win vb)

                (cfg-setup-notebook info cfg-info w)
                (gtk-box-pack-start vb w true true 0)

                (cfg-setup-buttons info win w)
                (gtk-box-pack-start vb w false false 0)

        (gtk-window-set-position win (cmacro GTK_WIN_POS_CENTER_ON_PARENT))
        (gtk-widget-show-all win) )

(defnet cfg-setup-notebook (info cfg-info @w)
        (deflocal default-info)

        (set default-info <info "default">)
        (set @w (gtk-notebook-new))
        (cfg-setup-notebook-page1 @w default-info cfg-info)
        (cfg-setup-notebook-page2 @w default-info cfg-info)
        (cfg-setup-notebook-page3 @w default-info cfg-info)
        (cfg-setup-notebook-page4 @w default-info cfg-info) )

(defnet cfg-setup-notebook-page1 (nb default-info cfg-info)
        (deflocal vb hb hb2 w)

        (set vb (gtk-vbox-new false 5))
        (skip (gtk-notebook-append-page nb vb (gtk-label-new $"Sequences")))
        (gtk-container-set-border-width vb 6)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set w (gtk-spin-button-new-with-range 4 20 0.1))
                (cfg-setup-frame-no-container hb w "Init thres./avg")
                (set <cfg-info "sb-init-scd-threshold"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "init-scd-threshold" default-info))
                (gtk-spin-button-set-numeric w true)

                (set w (gtk-spin-button-new-with-range 2 8 0.1))
                (cfg-setup-frame-no-container hb w "Min thres./avg")
                (set <cfg-info "sb-min-scd-threshold"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "min-scd-threshold" default-info))
                (gtk-spin-button-set-numeric w true)

                (set w (gtk-spin-button-new-with-range 0.01 0.99 0.01))
                (cfg-setup-frame-no-container hb w "Thres. ratio")
                (set <cfg-info "sb-scd-threshold-ratio"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "scd-threshold-ratio" default-info))
                (gtk-spin-button-set-numeric w true)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set w (gtk-spin-button-new-with-range 1 50 1))
                (cfg-setup-frame-no-container hb w "Min int. blks")
                (set <cfg-info "sb-scd-min-blocks"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "scd-min-blocks" default-info))
                (gtk-spin-button-set-numeric w true)

                (set w (gtk-spin-button-new-with-range 1 200 1))
                (cfg-setup-frame-no-container hb w "Min avg blk size")
                (set <cfg-info "sb-scd-min-avg-block-size"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "scd-min-avg-block-size" default-info))
                (gtk-spin-button-set-numeric w true)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 $"Final closure")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-final-closure"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "final-closure" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info) )

(defnet cfg-setup-notebook-page2 (nb default-info cfg-info)
        (deflocal vb hb hb2 w)

        (set vb (gtk-vbox-new false 5))
        (skip (gtk-notebook-append-page nb vb (gtk-label-new $"Checks")))
        (gtk-container-set-border-width vb 6)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 "Checks per interval+extra")

                        (set w (gtk-spin-button-new-with-range 2 100 1))
                        (set <cfg-info "sb-checks-per-interval"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "checks-per-interval" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)

                        (set w (gtk-spin-button-new-with-range 2 100 1))
                        (set <cfg-info "sb-checks-per-interval-extra"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "checks-per-interval-extra" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 "Min keypoints+min ratios")

                        (set w (gtk-spin-button-new-with-range 2 1000 1))
                        (set <cfg-info "sb-min-keypoints"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "min-keypoints" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)

                        (set w (gtk-spin-button-new-with-range 0.01 0.99 0.01))
                        (set <cfg-info "sb-min-keypoints-min-ratio"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "min-keypoints-min-ratio" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)

                        (set w (gtk-spin-button-new-with-range 0.01 0.99 0.01))
                        (set <cfg-info "sb-min-keypoints-min-ratio-lum"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "min-keypoints-min-ratio-lum" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 "Match thres.+min ratio")

                        (set w (gtk-spin-button-new-with-range 0.05 0.95 0.01))
                        (set <cfg-info "sb-sift-match-threshold"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "sift-match-threshold" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)

                        (set w (gtk-spin-button-new-with-range 0.01 0.99 0.01))
                        (set <cfg-info "sb-sift-match-threshold-min-ratio"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "sift-match-threshold-min-ratio" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)

                (set w (gtk-spin-button-new-with-range 1000 100000 1))
                (cfg-setup-frame-no-container hb w "Min agreements")
                (set <cfg-info "sb-sift-agreements-min"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "sift-agreements-min" default-info))
                (gtk-spin-button-set-numeric w true)

                (set w (gtk-spin-button-new-with-range 0 0.99 0.01))
                (cfg-setup-frame-no-container hb w "Proport. thres.")
                (set <cfg-info "sb-sift-proportionality-threshold"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "sift-proportionality-threshold" default-info))
                (gtk-spin-button-set-numeric w true)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 $"Scaling")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-sift-scale"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "sift-scale" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info)

                        (set w (gtk-spin-button-new-with-range 10000 1000000 1))
                        (set <cfg-info "sb-sift-scale-pixels"> w)
                        (gtk-spin-button-set-value w (cfg-get-or-default-num "sift-scale-pixels" default-info))
                        (gtk-spin-button-set-numeric w true)
                        (gtk-box-pack-start hb2 w false false 0)
                        (cfg-scale-toggled cfg-info) )

(defnet cfg-setup-notebook-page3 (nb default-info cfg-info)
        (deflocal vb hb hb2 w)

        (set vb (gtk-vbox-new false 5))
        (skip (gtk-notebook-append-page nb vb (gtk-label-new $"Filters")))
        (gtk-container-set-border-width vb 6)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set w (gtk-spin-button-new-with-range 0.01 4 0.01))
                (cfg-setup-frame-no-container hb w "Gamma 1")
                (set <cfg-info "sb-filter-gamma1"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "filter-gamma1" default-info))
                (gtk-spin-button-set-numeric w true)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 "Mirror 1")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-filter-mirror1"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "filter-mirror1" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 "Flip 1")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-filter-flip1"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "filter-flip1" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set w (gtk-spin-button-new-with-range 0.01 4 0.01))
                (cfg-setup-frame-no-container hb w "Gamma 2")
                (set <cfg-info "sb-filter-gamma2"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "filter-gamma2" default-info))
                (gtk-spin-button-set-numeric w true)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 "Mirror 2")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-filter-mirror2"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "filter-mirror2" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 "Flip 2")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-filter-flip2"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "filter-flip2" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info) )

(defnet cfg-setup-notebook-page4 (nb default-info cfg-info)
        (deflocal vb hb hb2 w i)

        (set vb (gtk-vbox-new false 5))
        (skip (gtk-notebook-append-page nb vb (gtk-label-new "Misc")))
        (gtk-container-set-border-width vb 6)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 $"Line drawing")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-sift-draw-lines"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "sift-draw-lines" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info)

                (set w (gtk-spin-button-new-with-range 2 1000 1))
                (cfg-setup-frame-no-container hb w "Sup. step incr.")
                (set <cfg-info "sb-supervision-skip-double"> w)
                (gtk-spin-button-set-value w (cfg-get-or-default-num "supervision-skip-double" default-info))
                (gtk-spin-button-set-numeric w true)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 $"Scaling")

                        (set w (gtk-check-button-new $"enabled"))
                        (set <cfg-info "tb-match-scale"> w)
                        (gtk-toggle-button-set-active w (cfg-get-or-default "match-scale" default-info))
                        (gtk-box-pack-start hb2 w false false 0)
                        (gtk-signal-connect w "toggled" (netptr cfg-scale-toggled) cfg-info)

        (set hb (gtk-hbox-new false 5))
        (gtk-box-pack-start vb hb false false 0)

                (set hb2 (gtk-hbox-new false 5))
                (cfg-setup-frame hb hb2 $"Language")

                (set w (gtk-combo-box-text-new))
                (gtk-box-pack-start hb2 w false false 0)
                (set <cfg-info "cb-languages"> w)

                (for i in (languages) do
                        (gtk-combo-box-text-append-text w i) )
                (gtk-combo-box-set-active w (lang)) )

(defnet cfg-setup-frame (box w title)
        (deflocal frame)

        (set frame (gtk-frame-new title))
        (gtk-box-pack-start box frame false true 0)
        (gtk-container-set-border-width w 6)
        (gtk-container-add frame w) )

(defnet cfg-setup-frame-no-container (box w title)
        (deflocal hb)

        (set hb (gtk-hbox-new false 0))
        (gtk-box-pack-start hb w false false 0)
        (cfg-setup-frame box hb title) )

(defnet cfg-setup-buttons (info win @w)
        (deflocal btn)

        (set @w (gtk-hbox-new false 6))

        (gtk-box-pack-end @w (gtk-iconed-button
                (pix-load-static "icons/16x16/dialog-cancel-3.png")
                "Cancel"
                (netptr gtk-close-win)
                win ) false false 0 )

        (gtk-box-pack-end @w (gtk-iconed-button
                (pix-load-static "icons/16x16/dialog-apply.png")
                "Ok"
                (netptr cfg-ok)
                info ) false false 0 ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet cfg-scale-toggled (cfg-info)
        (gtk-widget-set-sensitive <cfg-info "sb-sift-scale-pixels">
                (gtk-toggle-button-get-active <cfg-info "tb-sift-scale">) ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet cfg-destroy (info)
        (assoc-clr info "cfg-info")
        (gui-update info)
        (supervision-clear info)
        (supervision-pix-with-check info) )

(defnet cfg-ok (info)
        (deflocal cfg-info win)

        (set cfg-info <info "cfg-info">)
        (set win <cfg-info "w-win">)
        (sqlite3-begin _db)
        (alt    (seq    (cfg-ok-basic info cfg-info win)
                        (sqlite3-end _db) )
                (seq    (sqlite3-rollback _db)
                        (gtk-message-error win "errore nel salvataggio configurazione") ))
        (close win) )

(defnet cfg-ok-basic (info cfg-info win)
        (deflocal old-lang new-lang)

        (cfg-set "init-scd-threshold" (gtk-spin-button-get-value <cfg-info "sb-init-scd-threshold">))
        (cfg-set "min-scd-threshold" (gtk-spin-button-get-value <cfg-info "sb-min-scd-threshold">))
        (cfg-set "scd-threshold-ratio" (gtk-spin-button-get-value <cfg-info "sb-scd-threshold-ratio">))
        (cfg-set "scd-min-blocks" (gtk-spin-button-get-value <cfg-info "sb-scd-min-blocks">))
        (cfg-set "scd-min-avg-block-size" (gtk-spin-button-get-value <cfg-info "sb-scd-min-avg-block-size">))
        (cfg-set "final-closure" (gtk-toggle-button-get-active <cfg-info "tb-final-closure">))
        (cfg-set "checks-per-interval" (gtk-spin-button-get-value <cfg-info "sb-checks-per-interval">))
        (cfg-set "checks-per-interval-extra" (gtk-spin-button-get-value <cfg-info "sb-checks-per-interval-extra">))
        (cfg-set "min-keypoints" (gtk-spin-button-get-value <cfg-info "sb-min-keypoints">))
        (cfg-set "min-keypoints-min-ratio" (gtk-spin-button-get-value <cfg-info "sb-min-keypoints-min-ratio">))
        (cfg-set "min-keypoints-min-ratio-lum" (gtk-spin-button-get-value <cfg-info "sb-min-keypoints-min-ratio-lum">))
        (cfg-set "sift-match-threshold" (gtk-spin-button-get-value <cfg-info "sb-sift-match-threshold">))
        (cfg-set "sift-match-threshold-min-ratio" (gtk-spin-button-get-value <cfg-info "sb-sift-match-threshold-min-ratio">))
        (cfg-set "sift-agreements-min" (gtk-spin-button-get-value <cfg-info "sb-sift-agreements-min">))
        (cfg-set "sift-proportionality-threshold" (gtk-spin-button-get-value <cfg-info "sb-sift-proportionality-threshold">))
        (cfg-set "sift-scale" (gtk-toggle-button-get-active <cfg-info "tb-sift-scale">))
        (cfg-set "sift-scale-pixels" (gtk-spin-button-get-value <cfg-info "sb-sift-scale-pixels">))
        (cfg-set "filter-gamma1" (gtk-spin-button-get-value <cfg-info "sb-filter-gamma1">))
        (cfg-set "filter-mirror1" (gtk-toggle-button-get-active <cfg-info "tb-filter-mirror1">))
        (cfg-set "filter-flip1" (gtk-toggle-button-get-active <cfg-info "tb-filter-flip1">))
        (cfg-set "filter-gamma2" (gtk-spin-button-get-value <cfg-info "sb-filter-gamma2">))
        (cfg-set "filter-mirror2" (gtk-toggle-button-get-active <cfg-info "tb-filter-mirror2">))
        (cfg-set "filter-flip2" (gtk-toggle-button-get-active <cfg-info "tb-filter-flip2">))
        (cfg-set "sift-draw-lines" (gtk-toggle-button-get-active <cfg-info "tb-sift-draw-lines">))
        (cfg-set "supervision-skip-double" (gtk-spin-button-get-value <cfg-info "sb-supervision-skip-double">))
        (cfg-set "match-scale" (gtk-toggle-button-get-active <cfg-info "tb-match-scale">))
        (set old-lang (lang))
        (set new-lang (gtk-combo-box-get-active <cfg-info "cb-languages">))
        (cfg-set "lang" new-lang)
        (if (<> new-lang old-lang)
        then    (set-lang new-lang)
                (gtk-message-warning win $"Changing the language requires a restart to take effect.") ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

