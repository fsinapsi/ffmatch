;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet progress (parent title free abortable label th)
        (deflocal q gauge vbox hbox dlg but lbl x y delay-step delay thclk cnt cnt-inc aborted done msg)

        (set q (queue))

        (set gauge (iup-gauge))
        (iup-set-bool gauge "SHOWTEXT" (not free))

        (if abortable
        then    (set but (iup-button-icon $"Abort" (netptr progress-abort-cb) (pix-load-static "16x16/dialog-cancel-3.png") q))
                (set hbox (iup-hbox gauge but))
        else    (set hbox (iup-hbox gauge)) )
        (iup-set-str-attribute hbox "ALIGNMENT" "ACENTER")
        (iup-set-int hbox "GAP" 4)

        (if label
        then    (set lbl (iup-label ""))
                (set vbox (iup-vbox hbox lbl))
        else    (set vbox (iup-vbox hbox)) )
        (iup-set-str-attribute vbox "MARGIN" "6x6")
        (iup-set-int vbox "GAP" 4)

        (set dlg (iup-dialog vbox))
        (if (= parent undef)
        then    (set x (cmacro IUP_CENTER))
                (set y (cmacro IUP_CENTER))
        else    (iup-set-dlg-parent parent dlg)
                (set x (cmacro IUP_CENTERPARENT))
                (set y (cmacro IUP_CENTERPARENT)) )
        (if (<> title undef)
        then    (iup-set-str-attribute dlg "TITLE" title) )
        (iup-set-bool dlg "DIALOGFRAME" true)
        (iup-set-bool dlg "SIMULATEMODAL" true)
        (iup-set-callback dlg "CLOSE_CB" (netptr iup-success-cb))

        (iup-show-xy dlg x y)
        (iup-flush)

        (set delay-step 0.01)
        (set delay 0)
        (set thclk <_kv "th-clock">)
        (th-clock-reset)
        (send delay-step to thclk)
        (set cnt 0)
        (set cnt-inc 0.04)
        (set aborted false)
        (set done false)
        (thread-case*
            priority 1 (not done) (receive msg from th) ->
                (alt    (seq    (= msg "q")
                                (set done true) )
                        (seq    (= msg "a")
                                (set done true)
                                (set aborted true) )
                        (seq    (= (car msg) "m")
                                (if label
                                then    (iup-set-str-attribute lbl "TITLE" (cdr msg))
                                        (iup-refresh lbl)
                                        (iup-flush) ))
                        (seq    (rationalp msg)
                                (>= msg 0)
                                (<= msg 1)
                                (if (not free)
                                then    (iup-set-double gauge "VALUE" msg)
                                        (iup-flush) ))
                        (success) )
         [] priority 0 (not done) (receive msg from thclk) ->
                (inc delay delay-step)
                (if (>= delay 0.05)
                then    (inc cnt cnt-inc)
                        (if (< cnt 0)
                        then    (set cnt 0)
                                (set cnt-inc -cnt-inc) )
                        (if (> cnt 1)
                        then    (set cnt 1)
                                (set cnt-inc -cnt-inc) )
                        (if free
                        then    (iup-set-double gauge "VALUE" cnt)
                                (iup-flush) )
                        (set delay 0) )
                (send delay-step to thclk) )

        (iup-set-bool dlg "SIMULATEMODAL" false)
        (close dlg)
        (iup-close-queue q)
        (thread-join th)
        (not aborted) )

(defnet progress-abort-cb (self)
        (opt    (not <_kv "aborted">)
                (iup-confirm60 self
                        (+ $"The current operation will be aborted." nl $"Are you sure?") )
                (iup-set-active self false)
                (set <_kv "aborted"> true) ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

